{
    "env": {
        "browser": true,
        "es2021": true,
        "jest": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:react/jsx-runtime",
        "plugin:import/recommended",
        "plugin:import/typescript"
    ],
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "import"
    ],
    "settings": {
        "react": {
            "version": "detect"
        }
    },
    "rules": {
        "react/react-in-jsx-scope": "off",
        "react/no-unescaped-entities": "off",
        // import
        "import/first": "error",
        "import/no-absolute-path": "error",
        "import/no-self-import": "error",
        "import/no-extraneous-dependencies": "error",
        "import/exports-last": "error",
        "import/newline-after-import": "error",
        "import/extensions": [
            "error",
            "never"
        ],
        // security
        "no-eval": "error",
        "no-implied-eval": "error",
        "no-new-func": "error",
        "no-return-assign": "error",
        "no-return-await": "error",
        "no-useless-concat": "error",
        "no-useless-constructor": "error",
        "no-useless-return": "error",
        "no-useless-call": "error",
        "no-unused-vars": "warn",
        "no-unused-expressions": "error",
        "no-unneeded-ternary": "error",
        "no-undef-init": "error",
        "no-unreachable-loop": "error",
        "no-unmodified-loop-condition": "error",
        "no-new-object": "error",
        "no-new-wrappers": "error",
        "no-trailing-spaces": "error",
        "no-throw-literal": "error",
        "no-await-in-loop": "error",
        "no-array-constructor": "error",
        "no-labels": "error",
        "no-label-var": "error",
        "no-lone-blocks": "error",
        "no-shadow": "error",
        "no-self-compare": "error",
        "no-empty-function": "warn",
        "no-template-curly-in-string": "error",
        "no-whitespace-before-property": "error",
        "no-octal-escape": "error",
        "no-constructor-return": "error",
        "no-tabs": "error",
        "no-void": "error",
        "no-var": "error",
        "no-empty": "warn",
        "prefer-const": "error",
        "prefer-exponentiation-operator": "error",
        "prefer-arrow-callback": "error",
        "prefer-object-has-own": "error",
        "prefer-object-spread": "error",
        "prefer-regex-literals": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "space-before-blocks": "error",
        "space-infix-ops": "error",
        "space-unary-ops": "error",
        "space-in-parens": "error",
        "array-bracket-spacing": "error",
        "arrow-spacing": "error",
        "arrow-parens": "error",
        "comma-spacing": "error",
        "comma-style": "error",
        "computed-property-spacing": "error",
        "max-depth": "error",
        "dot-notation": "error",
        "key-spacing": "error",
        "keyword-spacing": "error",
        "default-case-last": "error",
        "func-call-spacing": "error",
        "lines-between-class-members": "error",
        "rest-spread-spacing": "error",
        "template-curly-spacing": "error",
        "brace-style": "error",
        "block-spacing": "error",
        "eqeqeq": "error",
        "curly": "error",
        "semi": "error",
        "yoda": "warn",
        "quotes": [
            "error",
            "single",
            {
                // allows to use other quotes when necessary
                "avoidEscape": true
            }
        ],
        "indent": [
            "error",
            4,
            {
                "SwitchCase": 1,
                // ignore decorators
                "ignoredNodes": [
                    "FunctionExpression > .params[decorators.length > 0]",
                    "FunctionExpression > .params > :matches(Decorator, :not(:first-child))",
                    "ClassBody.body > PropertyDefinition[decorators.length > 0] > .key"
                ]
            }
        ],
        "dot-location": [
            "error",
            "property"
        ],
        "space-before-function-paren": [
            "error",
            {
                "anonymous": "always",
                "asyncArrow": "always",
                "named": "never"
            }
        ],
        "padded-blocks": [
            "error",
            {
                "classes": "always"
            }
        ],
        "spaced-comment": [
            "error",
            "always",
            {
                // Allow comment to start without space for '*'
                "exceptions": [
                    "*"
                ]
            }
        ],
        "max-nested-callbacks": [
            "error",
            {
                "max": 4
            }
        ],
        "func-style": [
            "error",
            "declaration",
            {
                "allowArrowFunctions": true
            }
        ],
        "object-curly-spacing": [
            "error",
            "always"
        ],
        "no-multi-spaces": [
            "error",
            {
                "ignoreEOLComments": true
            }
        ]
    }
}